package net.umc.ludumdare.states;

import net.umc.ludumdare.tools.ResourceManager;
import net.umc.ludumdare.tools.StatsHelper;

import org.newdawn.slick.Color;
import org.newdawn.slick.Font;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Input;
import org.newdawn.slick.SlickException;

import org.newdawn.slick.state.BasicGameState;
import org.newdawn.slick.state.StateBasedGame;

public class StatsState extends BasicGameState{

    int stateID = 4;
    private int screenWidth, screenHeight, cloudY, midX, midY;
    private Font titleFont, headerFont, statFont, messageFont;
    private final String KEEP_TRY = "Keep Try", LEVEL = "Level", NUMTRIES = "# of Tries", NUMCOINS = "Coins";
    private final String RED = "1 - Red", ORANGE = "2 - Orange", YELLOW = "3 - Yellow", GREEN = "4 - Green";
    private final String BLUE = "5 - Blue", INDIGO = "6 - Indigo", VIOLET = "7 - Violet", RAINBOW = "8 - Bonus";
    private final String COINFORMAT = "%s/1";
    public StatsState( int stateID ) 
    {
       this.stateID = stateID;
    }
 
    public int getID() {
        return stateID;
    }
 
    public void init(GameContainer gc, StateBasedGame sbg) throws SlickException {
    	screenWidth = ResourceManager.getGlobalInt("SCREEN_WIDTH");
    	midX = screenWidth / 2;
    	screenHeight = ResourceManager.getGlobalInt("SCREEN_HEIGHT");
    	midY = screenHeight / 2;
    	cloudY = -2048; 
    	
    	titleFont = ResourceManager.generateNewFont("statTitle", 64, Color.black);
    	headerFont = ResourceManager.generateNewFont("statTitle", 48, Color.black);
    	statFont = ResourceManager.generateNewFont("statTitle", 36, Color.black);
    	messageFont = ResourceManager.generateNewFont("statTitle", 16, Color.black);
    }
 
    public void render(GameContainer gc, StateBasedGame sbg, Graphics g) throws SlickException {
    	g.setBackground(Color.black);
    	g.setColor(Color.white);
    	
    	g.drawImage(ResourceManager.getImage("cloudbg"), 0, cloudY - 2048);
    	g.drawImage(ResourceManager.getImage("cloudbg"), 0, cloudY);
    	g.drawImage(ResourceManager.getImage("cloudbg"), 0, cloudY + 2048);
    	
    	titleFont.drawString(midX - (titleFont.getWidth("Keep Try!") / 2), 0, KEEP_TRY);
    	headerFont.drawString(midX - 200, 150, LEVEL);
    	headerFont.drawString(midX, 150, NUMTRIES);
    	headerFont.drawString(midX + 200, 150, NUMCOINS);
    	
    	statFont.drawString(midX - 150, 220, RED);
    	statFont.drawString(midX, 220, StatsHelper.getTriesByLevelNumber(0) + "");
    	statFont.drawString(midX + 150, 220, String.format(COINFORMAT, 0));
    	
    	statFont.drawString(midX - 150, 270, ORANGE);
    	statFont.drawString(midX, 270, StatsHelper.getTriesByLevelNumber(0) + "");
    	statFont.drawString(midX + 150, 270, String.format(COINFORMAT, 0));
    	
    	statFont.drawString(midX - 150, 320, YELLOW);
    	statFont.drawString(midX, 320, StatsHelper.getTriesByLevelNumber(0) + "");
    	statFont.drawString(midX + 150, 320, String.format(COINFORMAT, 0));
    	
    	statFont.drawString(midX - 150, 370, GREEN);
    	statFont.drawString(midX, 370, StatsHelper.getTriesByLevelNumber(0) + "");
    	statFont.drawString(midX + 370, 220, String.format(COINFORMAT, 0));
    	
    	statFont.drawString(midX - 150, 420, BLUE);
    	statFont.drawString(midX, 420, StatsHelper.getTriesByLevelNumber(0) + "");
    	statFont.drawString(midX + 150, 420, String.format(COINFORMAT, 0));
    	
    	statFont.drawString(midX - 150, 470, INDIGO);
    	statFont.drawString(midX, 470, StatsHelper.getTriesByLevelNumber(0) + "");
    	statFont.drawString(midX + 150, 470, String.format(COINFORMAT, 0));
    	
    	statFont.drawString(midX - 150, 520, VIOLET);
    	statFont.drawString(midX, 520, StatsHelper.getTriesByLevelNumber(0) + "");
    	statFont.drawString(midX + 150, 520, String.format(COINFORMAT, 0));
    	
    	statFont.drawString(midX - 150, 570, RAINBOW);
    	statFont.drawString(midX, 570, StatsHelper.getTriesByLevelNumber(0) + "");
    	statFont.drawString(midX + 570, 220, String.format(COINFORMAT, 0));
    }
 
    public void update(GameContainer gc, StateBasedGame sbg, int delta) throws SlickException {
    	Input input = gc.getInput();
    	
    	cloudY = cloudY >= 2048 ? -2048 : cloudY + 2;
    }
	
}
