package net.umc.ludumdare.states;

import net.umc.ludumdare.sprites.Ship;
import net.umc.ludumdare.tools.ResourceManager;

import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Image;
import org.newdawn.slick.Input;
import org.newdawn.slick.SlickException;

import org.newdawn.slick.state.BasicGameState;
import org.newdawn.slick.state.StateBasedGame;

public class PlayState extends BasicGameState{

    int stateID = 2, bgPos = 500;
    private Ship ship;
    private Image spacebg;
    private int screenWidth, screenHeight;
    
    public PlayState( int stateID ) 
    {
       this.stateID = stateID;
    }
 
    public int getID() {
        return stateID;
    }
 
    public void init(GameContainer gc, StateBasedGame sbg) throws SlickException {
    	ship = new Ship();
    	ship.x = ship.y = 10;
    	ship.width = ship.height = 64;
    	screenWidth = ResourceManager.getGlobalInt("SCREEN_WIDTH");
    	screenHeight = ResourceManager.getGlobalInt("SCREEN_HEIGHT");
    	spacebg = ResourceManager.getImage("space_bg");
    }
 
    public void render(GameContainer gc, StateBasedGame sbg, Graphics g) throws SlickException {
    	// background
    	g.drawImage(spacebg, bgPos, 0);
    	g.drawImage(spacebg, bgPos, 500);
    	g.drawImage(spacebg, bgPos+500, 0);
    	g.drawImage(spacebg, bgPos+500, 500);
    	g.drawImage(spacebg, bgPos-500, 0);
    	g.drawImage(spacebg, bgPos-500, 500);
    	
    	// game play
    	ship.render(gc, sbg, g);
    	
    	// HUD
    	g.drawImage(ResourceManager.getImage("ship16"), 100, 10);
    	g.drawImage(ResourceManager.getImage("ship32"), 150, 10);
    }
 
    public void update(GameContainer gc, StateBasedGame sbg, int delta) throws SlickException {
    	Input input = gc.getInput();
    	if (input.isKeyPressed(Input.KEY_SPACE)) {
    		ResourceManager.getSound("blop").play();
    	}
    	
    	if (input.isKeyDown(Input.KEY_LEFT)) {
    		if (ship.x > 0) ship.x--;
    	}
    	else if (input.isKeyDown(Input.KEY_RIGHT)) {
    		if (ship.x + ship.width < screenWidth) ship.x++;
    	}
    	
    	if (input.isKeyDown(Input.KEY_UP)) {
    		if (ship.y > 0) ship.y--;
    	}
    	else if (input.isKeyDown(Input.KEY_DOWN)) {
    		if (ship.y + ship.height < screenHeight) ship.y++;
    	}
    	
    	bgPos = bgPos > 0 ? bgPos - 2 : 500;
    }
	
}
