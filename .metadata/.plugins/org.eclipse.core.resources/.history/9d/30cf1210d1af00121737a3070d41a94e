package net.umc.ludumdare.states;

import net.umc.ludumdare.tools.ResourceManager;

import org.newdawn.slick.Color;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Input;
import org.newdawn.slick.SlickException;

import org.newdawn.slick.state.BasicGameState;
import org.newdawn.slick.state.StateBasedGame;

public class OptionsState extends BasicGameState{

    int stateID = 1;
    private int screenWidth, screenHeight, menuSelector, resSelector, fullscreenSelector;
    private boolean fullscreen;
    
    public OptionsState( int stateID ) 
    {
       this.stateID = stateID;
    }
 
    public int getID() {
        return stateID;
    }
 
    public void init(GameContainer gc, StateBasedGame sbg) throws SlickException {
    	screenWidth = ResourceManager.getGlobalInt("SCREEN_WIDTH");
    	screenHeight = ResourceManager.getGlobalInt("SCREEN_HEIGHT");
    	menuSelector = 0;
    	if (screenWidth == 800 && screenHeight == 600) {
    		resSelector = 0;
    	}
    	else if (screenWidth == 1024 && screenHeight == 768) {
    		resSelector = 1;
    	}
    	else if (screenWidth == 1280 && screenHeight == 960) {
    		resSelector = 2;
    	}
    	else if (screenWidth == 1280 && screenHeight == 1024) {
    		resSelector = 3;
    	}
    	else if (screenWidth == 1440 && screenHeight == 900) {
    		resSelector = 4;
    	}
    	else if (screenWidth == 1600 && screenHeight == 900) {
    		resSelector = 5;
    	}
    	else if (screenWidth == 1900 && screenHeight == 1080) {
    		resSelector = 6;
    	}
    	else {
    		resSelector = 0;
    	}
    	fullscreen = ResourceManager.getGlobalBoolean("FULLSCREEN");
    	fullscreenSelector = fullscreen ? 0 : 1;
    }
 
    public void render(GameContainer gc, StateBasedGame sbg, Graphics g) throws SlickException {
    	g.setColor(Color.white);
    	g.drawString("Resolution", 20, 20);
    	if (resSelector == 0) {
    		g.setColor(Color.yellow);
    	}
    	g.drawString("800 x 600", 70, 20);
    	g.setColor(Color.white);
    	if (resSelector == 0) {
    		g.setColor(Color.yellow);
    	}
    	g.drawString("800 x 600", 70, 20);
    	g.setColor(Color.white);
    }
 
    public void update(GameContainer gc, StateBasedGame sbg, int delta) throws SlickException {
    	Input input = gc.getInput();
    	if (input.isKeyPressed(Input.KEY_DOWN)) {
    		menuSelector = menuSelector == 0 ? 1 : 0;
    	}
    	else if (input.isKeyPressed(Input.KEY_UP)) {
    		menuSelector = menuSelector == 0 ? 1 : 0;
    	}
    	
    }
	
}
